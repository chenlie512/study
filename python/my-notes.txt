1.自学就是一门手艺。手艺的特点就是无需天分，熟练度决定一切。
2.绝大多数人终生受时间幻觉的拖累。小时候觉得时间太长，长大了觉得时间太短。实际上时间总是以匀速进行着。
3.知识要用来来，光学不用是不能深入理解这个知识，不能运用的知识是死的。要学以致用。以用促学。
4.确定一个目标可以从3个方面入手：现实的、可行动的、可达成的。
5.阅读策略：1.不要试图一下子全部搞懂。2.要反复阅读很多遍。3.从容面对过早引用。
6.心理建设：别怕！

第一部分：
1.可编程的核心就是布尔运算以及相应的流程控制
2.布尔值区分大小写。true和True是不一样的
3.逻辑操作符：==,!=,>,>=,<,<=,in
4.逻辑操作符的运算对象是数字值和字符串值
5.布尔操作符：与（and）、或（or）、非（not）
6.流程控制：有了布尔运算能力之后，才有根据情况决定流程的流程控制
7.质数：它大于等于2，且只有在被它自身或者1做为除数时余数为0
8.else不仅可以和if一起用，还可以与for/while循环一起用，当循环正常执行时执行else语句，当循环被break或return破坏时，else不执行
9.求质数的算法可以被改进为。除以从2开始到（根号n+1）就可以了
10.函数相关概念：函数名、参数、返回值、调用（call）
11.任何计算机程序由两个最基本的部分构成：运算和流程控制
12.被运算的可以是常量或者是变量。常量的值就是字面上的意思、变量需要赋值
13.每个函数都有返回值，就算你没有设定返回值，默认返回None
14.值的类型：
布尔值：True/False
数字（Numbers）：整数（Int）、浮点数（Float）、复数（Complex Numbers）
字符串（String）
15.运算的一个默认法则就是，通常情况下应该是相同类型的值才能相互运算
不同类型的要转化为统一类型然后进行运算：int()/float()/str()等。查看类型的方法为type()
16.操作符：数值操作符、布尔值操作符、字符串操作符、列表操作符
17.数值操作符：+、-、*、/、//、%、**
其中+、-可以对单个值进行操作。其他的都需要两个值才能操作
18.优先级
对两个值进行操作的+、-最低
稍高的是*、/、//、%
更高的是对单个值的+、-
最高的是**
19.布尔值操作符：与（and）、或(or)、非(not)
优先级最低的是or，然后是and，最高的是not
20.逻辑操作符：<(小于)、<=(小于等于)、==(等于)、!=(不等于)、>(大于)、>=(大于等于)
数值操作符优先级最高，其次是逻辑操作符、布尔值操作符优先级最低
21.字符串操作符。有三种
第一种：拼接：+和' '(后者是空格)
第二种：拷贝：*
第三种：逻辑运算：in、not in ;以及<、<=、>、>=、==、!=。字符之间可以进行比较是因为字符对应着unicode,字符串进行比较从第一个字符开始进行比较，一旦决出胜负马上停止
ord('a'),可以显示a的unicode
21.列表的操作符。三种
第一种：拼接：+和' '(后者是空格)
第二种：拷贝：*
第三种：逻辑运算：in、not in ;以及<、<=、>、>=、==、!=。字符之间可以进行比较是因为字符对应着unicode，一旦决出胜负马上停止
22.pass语句是占位符，什么都不干
23.for循环更适合处理序列类型的迭代，while更灵活

函数
1.print()函数把传给它的值输出到屏幕上
2.f-string:f'{name} is {age} years old'  把name和age的值放入字符串中，然后输出。
3.参数前面带*号的是表示可以接受很多值得参数，这样的可以接受很多值得参数一般一个函数只有一个，不然怎么知道哪个值是哪个参数，而且函数既有接收1个值得位置参数，又有接收很多值得位置参数，那么接收很多的位置参数一般放在最后
4.class也是一个函数

字符串
1.ord('字母') ord()函数接收单个字符转换成unicode,接收多个字符的话会报错
2.chr(整数)，chr()函数接收一个整数，返回unicode为这个整数相对应的字符
3.字符串可以用 单引号、双引号、三个单引号、三个双引号来表示
4.int()在接收字符串的时候只能做整数转换  int('3.1415926')会报错
5.\是转义符
6.字符串的操作：
拼接：+或者空格
*：表示倍数
还可以用In或not in:返回布尔值
7.字符串的索引：
8.for char in str:遍历字符串str的每一个字符
9.str.index(char):返回字符char在字符串str中的索引
10.str.upper():str字符串的每个字符转为大写
11.str.lower():str字符串的每个字符转为小写
12._:在python命令行中，单个下划线，是个特殊变量。保存着最近的语句或者表达式的结果
13.casefold()也是转化成小写，他能转化一些欧洲语言字符，比lower()范围更广
s.capitalize() # 句首字母大写
s.title() # 每个单词首字母大写
s.swapcase() # 逐个字符更替大小写
str.encode() 在处理非英文字符串（比如中文）的时候，经常会用到
14.从左侧查找，找到返回索引，找不到返回-1：str.find()、str.index()
从右侧查找，找到返回索引，找不到返回-1：str.rfind()、str.rindex()
15.str.startswith() 和 str.endswith() 是用来判断一个字符串是否以某个子字符串起始或者结束的
16.str.replace(old,new[,count])替换
17.str.expandtabs( tabsize=8) 替换tab键为8个空格，默认是替换八个空格。
18.str.strip()：去除字符串首尾的所有空白，包括空格、TAB、换行符等等
如果给定strip()参数那么参数字符串中所有字符将会总首尾去除
str.lstrip():只对左侧处理
str.rstrip():只对右侧处理